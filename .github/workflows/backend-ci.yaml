name: 'Backend Continuous Integration'
on:
  pull_request:
    branches:
      - 'main'
    paths:
      - 'starter/frontend/**'
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: starter/backend
    steps:
      - name: Check out the code to the runner
        uses: actions/checkout@v3

      - name: Install pipenv using pip
        run: pip install pipenv

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ~/.local/share/virtualenvs
          key: deps-python-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        run: pipenv install --dev

      - name: Test pipenv
        run: pipenv run lint
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: starter/backend
    steps:
      - name: Check out the code to the runner
        uses: actions/checkout@v3

      - name: Install pipenv using pip
        run: pip install pipenv

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ~/.local/share/virtualenvs
          key: deps-python-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        run: pipenv install --dev

      - name: Test pipenv
        run: pipenv run test
  build:
    needs: [lint, test]
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: starter/backend
    steps:
      - name: Check out the code to the runner
        uses: actions/checkout@v3

      - name: Install pipenv using pip
        run: pip install pipenv

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ~/.local/share/virtualenvs
          key: deps-python-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        run: pipenv install --dev

      - name: Run application
        run: pipenv run serve

      - name: Build Docker image
        run: docker build --tag mp-backend:latest .

      - name: Run Docker image
        run: docker run -p 5000:5000 --name mp-backend -d mp-backend