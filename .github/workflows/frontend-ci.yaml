name: 'Frontend Continuous Integration'
on:
  pull_request:
    branches:
      - 'main'
    paths:
      - 'starter/frontend/**'
  workflow_dispatch:

env:
  # Set Node.js Version
  NODE_VERSION: '18.x'

jobs:
  lintApplication:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code to the runner
        run: actions/checkout@v3
      - name: Use Node.js 
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
  testApplication:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code to the runner
        run: actions/checkout@v3
      - name: Use Node.js 
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Test
        run: CI=true npm test
  buildApplication:
    needs: [lintApplication, testApplication]
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code to the runner
        run: actions/checkout@v3
      - name: Use Node.js 
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: 
          REACT_APP_MOVIE_API_URL=http://localhost:5000 npm start
        working-directory: ./starter/frontend
      - name: Build Docker image
        run: docker build --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 --tag=mp-frontend:latest .
        working-directory: ./starter/frontend
      - name: Run Docker image
        run: docker run --name mp-frontend -p 3000:3000 -d mp-frontend]
        working-directory: ./starter/frontend
